{"ast":null,"code":"var _jsxFileName = \"/home/akshay/Desktop/Projects/p07-deployment-docker-react-python-deep-learning/frontend/src/Context/FlaskState.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport flaskContext from \"./FlaskContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlaskState = props => {\n  _s();\n  const [InitImg, SetinitImg] = useState(\"init-1\");\n  const ShowImage = () => {\n    return InitImg;\n  };\n  const CallAPI = async selectedFile => {\n    console.log(\"CallAPI has been called\");\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    const response = await fetch('http://localhost:5000/classify', {\n      method: 'POST',\n      body: formData\n    });\n\n    // const json = await response.json();\n    const blob = await response.blob();\n    // const json = await response;\n    console.log(blob);\n    console.log(typeof blob);\n    SetinitImg(\"init-2\");\n    return blob;\n  };\n  return /*#__PURE__*/_jsxDEV(flaskContext.Provider, {\n    value: {\n      CallAPI,\n      ShowImage\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(FlaskState, \"t4VHSegObIT8nKtxNxTYW40QDnQ=\");\n_c = FlaskState;\nexport default FlaskState;\nvar _c;\n$RefreshReg$(_c, \"FlaskState\");","map":{"version":3,"names":["useState","flaskContext","jsxDEV","_jsxDEV","FlaskState","props","_s","InitImg","SetinitImg","ShowImage","CallAPI","selectedFile","console","log","formData","FormData","append","response","fetch","method","body","blob","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/akshay/Desktop/Projects/p07-deployment-docker-react-python-deep-learning/frontend/src/Context/FlaskState.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport flaskContext from \"./FlaskContext\"\r\n\r\nconst FlaskState = (props) => {\r\n\r\n    const [InitImg , SetinitImg]=useState(\"init-1\")\r\n\r\n    const ShowImage=()=>{\r\n\r\n        return InitImg\r\n\r\n    }\r\n\r\n    const CallAPI = async (selectedFile) => {\r\n\r\n        console.log(\"CallAPI has been called\")\r\n        const formData = new FormData();\r\n        formData.append('image', selectedFile);\r\n\r\n        const response = await fetch('http://localhost:5000/classify', {\r\n            method: 'POST',\r\n            body: formData,\r\n        })\r\n\r\n        // const json = await response.json();\r\n        const blob = await response.blob();\r\n        // const json = await response;\r\n        console.log(blob);\r\n        console.log(typeof blob);\r\n        SetinitImg(\"init-2\")\r\n        return blob\r\n    }\r\n    return (\r\n        <flaskContext.Provider value={{ CallAPI,ShowImage }}>\r\n            {props.children}\r\n        </flaskContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default FlaskState;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,YAAY,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE1B,MAAM,CAACC,OAAO,EAAGC,UAAU,CAAC,GAACR,QAAQ,CAAC,QAAQ,CAAC;EAE/C,MAAMS,SAAS,GAACA,CAAA,KAAI;IAEhB,OAAOF,OAAO;EAElB,CAAC;EAED,MAAMG,OAAO,GAAG,MAAOC,YAAY,IAAK;IAEpCC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,YAAY,CAAC;IAEtC,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACV,CAAC,CAAC;;IAEF;IACA,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClC;IACAT,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;IACjBT,OAAO,CAACC,GAAG,CAAC,OAAOQ,IAAI,CAAC;IACxBb,UAAU,CAAC,QAAQ,CAAC;IACpB,OAAOa,IAAI;EACf,CAAC;EACD,oBACIlB,OAAA,CAACF,YAAY,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAEb,OAAO;MAACD;IAAU,CAAE;IAAAe,QAAA,EAC/CnB,KAAK,CAACmB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAGhC,CAAC;AAAAtB,EAAA,CAnCKF,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAqChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}